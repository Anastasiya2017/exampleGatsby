share: Share

nav:
    introduction: Introduction
    connections: Connections
    overview: Overview
    other-libraries: Other Libraries
    conclusion: Conclusion
    other-tools: Other Tools
    opinions: Opinions
    demographics: Demographics
    support_us: Support Us
    awards: Awards 🏆

    javascript-flavors: JavaScript Flavors
    front-end-frameworks: Front-end Frameworks
    data-layer: Data Layer
    back-end-frameworks: Back-end Frameworks
    testing: Testing
    mobile-and-desktop: Mobile & Desktop

tools:
    angular: Angular
    native-apps: Native Apps
    graphql: GraphQL
    es6: ES6
    phonegap-cordova: Cordova
    storybook: Storybook
    apollo: Apollo
    purescript: PureScript
    coffeescript: CoffeeScript
    dart: Dart
    kotlin: Kotlin
    scala: Scala
    vanilla-js: Vanilla JS
    haxe: Haxe
    knockout: Knockout
    Knockout: Knockout
    dojo: Dojo
    web-components: Web Components
    reagent: Reagent
    canjs: CanJS
    extjs: Ext JS
    web-assembly: WebAssembly
    glimmer: glimmer
    ember-data: ember-data
    mongodb: MongoDB
    firebase: Firebase 
    ngrx: ngrx
    dotnet: .NET
    rails: Rails
    php: PHP
    python: Python
    laravel: Laravel
    ruby: Ruby
    elixir: Elixir
    django: Django
    golang: Go
    C#: C#
    java: Java
    rust: Rust
    haskell: Haskell
    selenium: Selenium
    sinon: Sinon.js
    cucumberjs: CucumberJS
    tap: tap
    elm-test: elm-test
    flutter: Flutter
    pwa: Progressive Web Apps
    weex: weex
    xamarin: xamarin
    appcelerator: Appcelerator
    quasar: Quasar
    expo: Expo
    nwjs: NW.js
    c-cplusplus: C/C++
    swift: Swift
    objective-c: Objective-C
    ocaml: OCaml
    webgl: WebGL
    service-workers: Service Workers
    webrtc: WebRTC
    webvr: WebVR
    web-animations-api: Web Animations API
    web-audio-api: Web Audio API
    web-speech-api: Web Speech API
    parcel: Parcel
    make: Make
    lodash: lodash
    moment: moment
    underscore: underscore
    date-fns: Date-fns
    ramda: Ramda
    luxon: luxon
    visual-studio: VS Code
    sublime-text: Sublime Text
    webstorm: WebStorm
    atom: Atom
    emacs: emacs
    intellij: IntelliJ
    phpstorm: PhpStorm
    notepad++: notepad++
    brackets: Brackets
    nano: nano
    pycharm: PyCharm

block_intro:
    happiness: >
        On a scale of one to five, how happy are developers
        with the current state of ${section} tools?
    happiness_trend: >
        How does happiness about ${section} evolved over time?

opinions:
    legends:
        never_heard: I've never heard of it
        not_interested: I've HEARD of it, and am NOT interested
        interested: I've HEARD of it, and WOULD like to learn it
        would_use: I've USED it before, and WOULD use it again
        would_not_use: I've USED it before, and would NOT use it again
    legends_short:
        never_heard: Never heard of it
        not_interested: Heard of it, not interested
        interested: Heard of it, would like to learn
        would_use: Used it, would use again
        would_not_use: Used it, would not use again

reasons:
    elegant_programming_style_patterns:
        long: ⚙️ Elegant programming style & patterns
        short: ⚙️ Programming style
    robust_less_error_prone_code:
        long: 🐞 Robust, less error-prone code
        short: 🐞 Robust code
    rich_package_ecosystem:
        long: 🎁 Rich package ecosystem
        short: 🎁 Package ecosystem
    fast_performance:
        long: ⚡ Fast performance
        short: ⚡ Fast performance
    well_established_option:
        long: 🏛️ Well-established option
        short: 🏛️ Well-established
    easy_learning_curve:
        long: 👶 Easy learning curve
        short: 👶 Easy to learn
    powerful_developer_tooling:
        long: 🔧 Powerful developer tooling
        short: 🔧 Tooling
    good_documentation:
        long: 📖 Good documentation
        short: 📖 Documentation
    backed_by_a_great_team_company:
        long: 👫 Backed by a great team/company
        short: 👫 Team/company
    simple_lightweight:
        long: 🎈 Simple & lightweight
        short: 🎈 Lightweight
    growing_momentum_popularity:
        long: 📉 Growing momentum/popularity
        short: 📉 Momentum
    full_featured_powerful:
        long: 🕹️ Full-featured & powerful
        short: 🕹️ Full-featured
    stable_backwards_compatible:
        long: ⚖️ Stable & backwards-compatible
        short: ⚖️ Stability
    clumsy_programming_style:
        long: ⚙️ Clumsy programming style
        short: ⚙️ Clumsy
    buggy_error_prone_code:
        long: 🐞 Buggy, error-prone code
        short: 🐞 Buggy code
    poor_performance:
        long: ⚡ Poor performance
        short: ⚡ Poor performance
    small_package_ecosystem:
        long: 🎁 Small package ecosystem
        short: 🎁 Few packages
    new_untested_option:
        long: 🏛️ New untested option
        short: 🏛️ New & untested
    hard_learning_curve:
        long: 👶 Hard learning curve
        short: 👶 Hard to learn
    lacking_developer_tooling:
        long: 🔧 Lacking developer tooling
        short: 🔧 Lacking tooling
    bad_documentation:
        long: 📖 Bad documentation
        short: 📖 Bad documentation
    concerns_about_the_team_company:
        long: 👫 Concerns about the team/company
        short: 👫 Bad team/company
    bloated_complex:
        long: 🎈 Bloated & complex
        short: 🎈 Bloated & complex
    diminishing_momentum_popularity:
        long: 📉 Diminishing momentum/popularity
        short: 📉 Low momentum
    limited_lacking_in_features:
        long: 🕹️ Limited & lacking in features
        short: 🕹️ Limited
    fast_changing_breaks_often:
        long: ⚖️ Fast-changing & breaks often
        short: ⚖️ Fast-changing
    other:
        long: Other
        short: Other

other_tools:
    other_languages: Other Languages
    browser_apis: Browser APIs
    build_tools: Build Tools
    utility_libraries: Utility Libraries
    text_editors: Text Editors

charts:
    overview: Libraries Results
    overview_description: Per-library survey results.
    happiness: Overall Happiness
    other-tools: Other Tools
    all-libraries: All Libraries
    quadrant: Quadrant Chart
    results-over-time: ${tool}'s Popularity Over Time
    likes: Most Liked Aspects of ${tool}
    dislikes: Most Disliked Aspects of ${tool}
    tool-usage-by-country: ${tool} Usage by Country
    other-languages: Other Languages
    browser-apis: Browser APIs
    build-tools: Build Tools
    utility-libraries: Utility Libraries
    text-editors: Text Editors
    countries: Responses per Country
    gender: Gender Breakdown
    salaries: Salaries
    salaries-map: Salaries per Country
    experience: Experience
    company-size: Company Size
    participation-by-country: Participation by country
    salary-per-country: Average salary per country
    opinion-js_moving_in_right_direction: JavaScript is moving in the right direction
    opinion-building_js_apps_overly_complex: Building JavaScript apps is overly complex right now
    opinion-js_over_used_online: JavaScript is over-used online
    opinion-enjoy_building_js_apps: I enjoy building JavaScript apps
    opinion-would_like_js_to_be_main_lang: I would like JavaScript to be my main programming language
    opinion-js_ecosystem_changing_to_fast: The JavaScript ecosystem is changing too fast
    opinion-survey_too_long: This survey is too damn long!
    tool-pairing: Which tools do developers use along with ${tool}?
    highest-satisfaction: With a 96.6% satisfaction ratio, Jest was the most liked technology this year
    highest-interest: Find out which technology had the highest satisfaction ratio in 2018
    
shortnames:
    introduction: Intro
    javascript-flavors: Flavors
    front-end-frameworks: Front-end
    data-layer: Data Layer
    back-end-frameworks: Back-end
    testing: Testing
    mobile-and-desktop: Mobile & Desktop
    opinions: Opinions
    demographics: Demographics
    conclusion: Conclusion
    other-libraries: Other

symbols:
    javascript-flavors: Fv
    front-end-frameworks: Fe
    data-layer: Dl
    back-end-frameworks: Be
    testing: Te
    mobile-and-desktop: Mb
    opinions: Op
    demographics: Dm
    conclusion: Cn

intros:
    javascript-flavors: >
        As JavaScript matures, developers are starting to look
        beyond its borders and create various languages and dialects that
        compile to JavaScript. 
    front-end-frameworks: >
        The front-end remains the key battleground for JavaScript. But now
        that the dust has cleared, it's starting to look like only two
        combattants are left standing…
    data-layer: >
        The data layer regroups all the technologies used to transmit and manage data. 
        It's a vast category where many approaches compete to make a tricky problem more
        approachable.
    back-end-frameworks: >
        JavaScript on the back-end hasn't seen any major breakthroughs in recent years. 
        But compared to the rest of the ecosystem's frenetic pace,
        many will say that this is a blessing, not a curse. 
    testing: >
        Testing, testing… Is this thing on? Sorry, I Jest, but I would never want to make a Mocha-ry 
        of this section. That would be Jasmine (“just mean”? get it?), and that's bad Karma.
    mobile-and-desktop: >
        “Any application that can be written in JavaScript, will eventually be written in JavaScript.”
        JavaScript is not limited to the browser anymore, and it's only
        a matter of time until your smart toaster burns your bread because NPM is down. 
    other-tools: >
        Other tools that didn't quite fit in any other category.
    opinions: >
        To find out how developers view the current JavaScript ecosystem, 
        we asked them how much they agreed or disagreed with the following opinions.
    demographics: >
        We wanted to learn more about our survey respondents. 
    awards: >
        Join us for the first ever State of JS awards! Can you guess which technologies took gold
        in each category? <span class="note">(Note: we've excluded ES6 from the awards to avoid skewing the data)</span>

opinion_scale:
    0: Strongly Disagree
    1: Disagree
    2: Neutral
    3: Agree
    4: Strongly Agree

happiness:
    0: Unhappy
    1: Unhappy
    2: Neutral
    3: Happy
    4: Happy    

salary_range:
    work-for-free: work for free
    0-10: $0k-$10k
    10-30: $10k-$30k
    30-50: $30k-$50k
    50-100: $50k-$100k
    100-200: $100k-$200k
    more-than-200: $200k+   